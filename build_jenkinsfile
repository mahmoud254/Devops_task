node {
    def mvnHome
    stage('Preparation') { 
        checkout([$class: 'GitSCM', branches: [[name: "${params.COMMIT_ID}" ]],
        userRemoteConfigs: [[url: 'https://github.com/ahmedmisbah-ole/Devops-Orange']]])
        mvnHome = tool 'm3'
    }
    stage('Build maven project') {
        // Run the maven build
        withEnv(["MVN_HOME=$mvnHome"]) {
                writeFile file: 'Toy0Store/src/main/resources/application.properties', text: 'spring.datasource.url=${MY_SQL_DB_NAME}\nspring.datasource.username=${MY_SQL_user_NAME}\nspring.datasource.password=${MY_SQL_password}\nspring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl\nspring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl'
                sh """
                cd Toy0Store
                "$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore clean package
                
                """

        }
    }
    stage('build and push docker image') {
        
            withCredentials([usernamePassword(credentialsId: 'Nexus', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                
                writeFile file: 'Dockerfile', text: 'FROM openjdk:8-jdk-alpine\nARG JAR_FILE=Toy0Store/target/*.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT ["java","-jar","/app.jar"]'
                sh """
                   docker build . -t "mahmom/gs-spring-boot-docker:v1.0"
                   docker login --username $USERNAME --password $PASSWORD
                   docker push "mahmom/gs-spring-boot-docker:v1.0"
               """
                   
              
            }
    }
}